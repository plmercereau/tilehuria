- table:
    schema: auth
    name: account_providers
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: provider
    using:
      foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: roleByRole
    using:
      foreign_key_constraint_on: role
- table:
    schema: auth
    name: accounts
  object_relationships:
  - name: role
    using:
      foreign_key_constraint_on: default_role
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_providers
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_roles
  - name: refresh_tokens
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: refresh_tokens
- table:
    schema: auth
    name: providers
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: auth_provider
        table:
          schema: auth
          name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: role
        table:
          schema: auth
          name: account_roles
  - name: accounts
    using:
      foreign_key_constraint_on:
        column: default_role
        table:
          schema: auth
          name: accounts
- table:
    schema: public
    name: area_of_interest
  configuration:
    custom_root_fields:
      insert: insertAreasOfInterest
      select_aggregate: areaOfInterestAggregate
      insert_one: insertAreaOfInterest
      select_by_pk: areaOfInterest
      select: areasOfInterest
      delete: deleteAreaOfInterests
      update: updateAreasOfInterest
      delete_by_pk: deleteAreaOfInterest
      update_by_pk: updateAreaOfInterest
    custom_column_names:
      max_zoom: maxZoom
      tiles_count: tilesCount
      min_zoom: minZoom
      xyz_coordinates: xyzCoordinates
      user_id: userId
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: tileSets
    using:
      foreign_key_constraint_on:
        column: area_of_interest_id
        table:
          schema: public
          name: tile_set
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - max_zoom
      - min_zoom
      - name
      - source
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - max_zoom
      - min_zoom
      - name
      - source
      - tiles_count
      - user_id
      - xyz_coordinates
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - max_zoom
      - min_zoom
      - name
      - source
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  event_triggers:
  - name: calculate_aoi_coordinates
    definition:
      enable_manual: true
      insert:
        columns: '*'
      update:
        columns:
        - max_zoom
        - min_zoom
        - source
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: EVENT_AOI
- table:
    schema: public
    name: tile_provider
  configuration:
    custom_root_fields:
      insert: insertTileProviders
      select_aggregate: tileProviderAggregate
      insert_one: insertTileProvider
      select_by_pk: tileProvider
      select: tileProviders
      delete: deleteTileProviders
      update: updateTileProviders
      delete_by_pk: deleteTileProvider
      update_by_pk: updateTileProvider
    custom_column_names: {}
  array_relationships:
  - name: tileSets
    using:
      foreign_key_constraint_on:
        column: tile_provider_id
        table:
          schema: public
          name: tile_set
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - id
      - name
      - slug
      - url
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - name
      - slug
      - url
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - id
      - name
      - slug
      - url
      filter: {}
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        _not:
          tileSets:
            id:
              _is_null: false
- table:
    schema: public
    name: tile_set
  configuration:
    custom_root_fields:
      insert: insertTileSets
      select_aggregate: tileSetAggregate
      insert_one: insertTileSet
      select_by_pk: tileSet
      select: tileSets
      delete: deleteTileSets
      update: updateTileSets
      delete_by_pk: deleteTileSet
      update_by_pk: updateTileSet
    custom_column_names:
      area_of_interest_id: areaOfInterestId
      tile_provider_id: tileProviderId
  object_relationships:
  - name: areaOfInterest
    using:
      foreign_key_constraint_on: area_of_interest_id
  - name: tileProvider
    using:
      foreign_key_constraint_on: tile_provider_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - area_of_interest_id
      - format
      - id
      - quality
      - tile_provider_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - area_of_interest_id
      - format
      - id
      - progress
      - quality
      - size
      - tile_provider_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - format
      - quality
      filter:
        progress:
          _eq: 1
      check: {}
  delete_permissions:
  - role: user
    permission:
      filter: {}
  event_triggers:
  - name: generate_tiles
    definition:
      enable_manual: true
      insert:
        columns: '*'
      update:
        columns:
        - quality
        - format
    retry_conf:
      num_retries: 3
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: EVENT_TILE_SET
- table:
    schema: public
    name: users
  object_relationships:
  - name: account
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: accounts
        column_mapping:
          id: user_id
  array_relationships:
  - name: area_of_interests
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: area_of_interest

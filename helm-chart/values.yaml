
global:
  hostname: localhost
  minio:
    accessKey: <minio-access-key> # ? secret
    secretKey: <minio-secret-key> # TODO secret
    defaultBuckets: tilehuria # TODO duplicate - couldn't find a workaround
  postgresql:
    postgresqlDatabase: tilehuria
    postgresqlUsername: postgres
    postgresqlPassword: secret-postgresql-password
    servicePort: 5432
  hasura:
    adminSecret: parent-blahhhhhhh # TODO do not set here but ask as required - and eventually use a kubernetes secret
    jwtAlgorithm: RS256

minio:
  enabled: true
  defaultBuckets: tilehuria

rabbitmq:
  enabled: true
  auth:
    username: user
    password: <secret-rabbitmq-password>

postgresql:
  enabled: true
  image:
    tag: 12.3.0

hasura:
  enabled: true
  image:
    tag: v1.3.0-beta.4
  ingress:
    enabled: true
    tls: true
  env:
    HASURA_GRAPHQL_JWT_SECRET: 
      type: "{{ .Values.global.hasura.jwtAlgorithm }}"
      jwk_url: "http://{{ .Release.Name }}-hasura-backend-plus/auth/jwks"
    HOOKS_URL: "http://{{ .Release.Name }}-hooks"
    HOOKS_REMOTE_SCHEMA: "http://{{ .Release.Name }}-hooks/graphql"
    EVENT_AOI: "http://{{ .Release.Name }}-hooks/events/area-of-interest"
    EVENT_TILE_SET: "http://{{ .Release.Name }}-hooks/events/tile-set"
  
hasura-backend-plus:
  enabled: true
  image:
    tag: latest
  ingress:
    enabled: true
    tls: true
  env: 
  # TODO tls is enabled
  # TODO hard code this variable in the deployment template
    SERVER_URL: "http://{{ .Values.global.hostname }}"
    JWT_ALGORITHM: "{{ .Values.global.hasura.jwtAlgorithm }}"
    AUTO_MIGRATE: "false"
    HIBP_ENABLE: "false" # * default
    JWT_CUSTOM_FIELDS: "" # * default

hooks:
  enabled: true
  image:
    tag: latest
    pullPolicy: Always

worker:
  enabled: true
  image:
    tag: latest
    pullPolicy: Always
  
traefik:
  enabled: true
